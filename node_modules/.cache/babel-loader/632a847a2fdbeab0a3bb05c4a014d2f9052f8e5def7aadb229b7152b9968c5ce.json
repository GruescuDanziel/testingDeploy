{"ast":null,"code":"import { createTheme } from \"@mui/material/styles\";\nimport COLORS from \"../constants/CustomColors\";\nimport SIZE from \"../constants/CustomSize\";\nconst GlobalTheme = createTheme({\n  components: {\n    MuiButton: {\n      defaultProps: {\n        disableRipple: true\n      },\n      variants: [{\n        //green square button\n        props: {\n          variant: \"outlined\",\n          color: \"success\"\n        },\n        style: {\n          height: SIZE.HEIGHT_TABLE_BUTTON,\n          width: SIZE.WIDTH_TABLE_BUTTON,\n          color: COLORS.SUCCESS,\n          borderColor: COLORS.SUCCESS,\n          \":hover\": {\n            filter: \"brightness(85%)\",\n            backgroundColor: COLORS.SUCCESS,\n            color: \"white\"\n          }\n        }\n      }, {\n        //yellow square button\n        props: {\n          variant: \"outlined\",\n          color: \"warning\"\n        },\n        style: {\n          height: SIZE.HEIGHT_TABLE_BUTTON,\n          width: SIZE.WIDTH_TABLE_BUTTON,\n          color: COLORS.WARNING,\n          borderColor: COLORS.WARNING,\n          \":hover\": {\n            filter: \"brightness(85%)\",\n            backgroundColor: COLORS.WARNING,\n            color: \"white\"\n          }\n        }\n      }, {\n        // yellow rounded button with green boredr\n        props: {\n          variant: \"contained\",\n          color: \"warning\"\n        },\n        style: {\n          height: SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n          width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n          backgroundColor: COLORS.WARNING,\n          borderRadius: \"20px\",\n          \":hover\": {\n            filter: \"brightness(85%)\",\n            backgroundColor: COLORS.WARNING\n          }\n        }\n      }, {\n        // red rounded button with green boredr\n        props: {\n          variant: \"contained\",\n          color: \"error\"\n        },\n        style: {\n          height: SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n          width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n          backgroundColor: COLORS.ERROR,\n          borderRadius: \"20px\",\n          \":hover\": {\n            filter: \"brightness(85%)\",\n            backgroundColor: COLORS.ERROR\n          }\n        }\n      }, {\n        // green rounded button with green boredr\n        props: {\n          variant: \"contained\",\n          color: \"success\"\n        },\n        style: {\n          height: SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n          width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n          backgroundColor: COLORS.SUCCESS,\n          borderRadius: \"20px\",\n          \":hover\": {\n            filter: \"brightness(85%)\",\n            backgroundColor: COLORS.SUCCESS\n          }\n        }\n      }, {\n        //not avaible square button\n        props: {\n          variant: \"outlined\",\n          color: \"info\"\n        },\n        style: {\n          height: SIZE.HEIGHT_TABLE_BUTTON,\n          width: SIZE.WIDTH_TABLE_BUTTON,\n          backgroundColor: COLORS.NOTAVAIBLE,\n          borderColor: COLORS.NOTAVAIBLE,\n          color: \"white\"\n        }\n      }, {\n        // white rounded button with black boreder\n        props: {\n          variant: \"outlined\",\n          color: \"inherit\"\n        },\n        style: {\n          height: SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n          width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n          borderColor: \"#3A5568\",\n          borderRadius: \"20px\",\n          backgroundColor: \"white\",\n          color: \"black\",\n          \":hover\": {\n            filter: \"brightness(85%)\",\n            backgroundColor: \"white\"\n          }\n        }\n      }],\n      styleOverrides: {\n        root: _ref => {\n          let {\n            theme,\n            ownerState\n          } = _ref;\n          return {\n            ...(ownerState.variant === \"outlined\" && {\n              height: SIZE.HEIGHT_ADMIN_BUTTON,\n              color: COLORS.ADMINCOLOR,\n              borderColor: COLORS.ADMINCOLOR\n            }),\n            ...(ownerState.variant === \"contained\" && {\n              height: SIZE.HEIGHT_ADMIN_BUTTON,\n              backgroundColor: COLORS.ADMINCOLOR\n            })\n          };\n        }\n      }\n    }\n  }\n});\nexport default GlobalTheme;","map":{"version":3,"names":["createTheme","COLORS","SIZE","GlobalTheme","components","MuiButton","defaultProps","disableRipple","variants","props","variant","color","style","height","HEIGHT_TABLE_BUTTON","width","WIDTH_TABLE_BUTTON","SUCCESS","borderColor","filter","backgroundColor","WARNING","HEIGHT_ROUNDED_TABLE_BUTTON","WIDTH_ROUNDED_TABLE_BUTTON","borderRadius","ERROR","NOTAVAIBLE","styleOverrides","root","_ref","theme","ownerState","HEIGHT_ADMIN_BUTTON","ADMINCOLOR"],"sources":["/home/danziel/Charts/meeting-rooms-booking/src/context/GlobalThemes.ts"],"sourcesContent":["import { createTheme } from \"@mui/material/styles\";\nimport COLORS from \"../constants/CustomColors\"\nimport SIZE from \"../constants/CustomSize\";\nconst GlobalTheme = createTheme({\n    components: {\n        MuiButton: {\n            defaultProps:{\n                disableRipple:true\n            },\n            variants: [\n                {\n                    //green square button\n                    props: { variant: \"outlined\", color: \"success\" },\n                    style: {\n                        height: SIZE.HEIGHT_TABLE_BUTTON,\n                        width: SIZE.WIDTH_TABLE_BUTTON,\n                        color: COLORS.SUCCESS,\n                        borderColor: COLORS.SUCCESS,\n                        \":hover\":{\n                            filter:\"brightness(85%)\",\n                            backgroundColor:COLORS.SUCCESS,\n                            color:\"white\"\n                         }\n                    },\n                },\n                {\n                    //yellow square button\n                    props: { variant: \"outlined\", color: \"warning\" },\n                    style: {\n                        height: SIZE.HEIGHT_TABLE_BUTTON,\n                        width: SIZE.WIDTH_TABLE_BUTTON,\n                        color: COLORS.WARNING,\n                        borderColor: COLORS.WARNING,\n                        \":hover\":{\n                            filter:\"brightness(85%)\",\n                            backgroundColor:COLORS.WARNING,\n                            color:\"white\"\n                         }\n                    },\n                    \n                },\n                {\n                    // yellow rounded button with green boredr\n                    props: { variant: \"contained\", color: \"warning\" },\n                    style: {\n                        height:SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n                        width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n                        backgroundColor: COLORS.WARNING,\n                        borderRadius: \"20px\",\n                        \":hover\":{\n                            filter:\"brightness(85%)\",\n                            backgroundColor:COLORS.WARNING\n                         }\n                    },\n                },\n                {\n                    // red rounded button with green boredr\n                    props: { variant: \"contained\", color: \"error\" },\n                    style: {\n                        height:SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n                        width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n                        backgroundColor:COLORS.ERROR,\n                        borderRadius: \"20px\",\n                        \":hover\":{\n                            filter:\"brightness(85%)\",\n                            backgroundColor:COLORS.ERROR\n                         }\n                    },\n                },\n\n                {\n                    // green rounded button with green boredr\n                    props: { variant: \"contained\", color: \"success\" },\n                    style: {\n                        height:SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n                        width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n                        backgroundColor: COLORS.SUCCESS,\n                        borderRadius: \"20px\",\n                        \":hover\":{\n                            filter:\"brightness(85%)\",\n                            backgroundColor:COLORS.SUCCESS\n                         }\n                    },\n                },\n                {\n                    //not avaible square button\n                    props: { variant: \"outlined\", color: \"info\" },\n                    style: {\n                        height: SIZE.HEIGHT_TABLE_BUTTON,\n                        width: SIZE.WIDTH_TABLE_BUTTON,\n                        backgroundColor: COLORS.NOTAVAIBLE,\n                        borderColor: COLORS.NOTAVAIBLE,\n                        color: \"white\",\n                        \n                    },\n                },\n                {\n                    // white rounded button with black boreder\n                    props: { variant: \"outlined\", color: \"inherit\" },\n                    style: {\n                        height:SIZE.HEIGHT_ROUNDED_TABLE_BUTTON,\n                        width: SIZE.WIDTH_ROUNDED_TABLE_BUTTON,\n                        borderColor: \"#3A5568\",\n                        borderRadius: \"20px\",\n                        backgroundColor:\"white\",\n                        color: \"black\",\n                        \":hover\":{\n                           filter:\"brightness(85%)\",\n                           backgroundColor:\"white\"\n                        }\n                    },\n                },\n            ],\n            styleOverrides: {\n                root: ({ theme, ownerState }) => ({\n                    ...(ownerState.variant === \"outlined\" && {\n                        height: SIZE.HEIGHT_ADMIN_BUTTON,\n                        color: COLORS.ADMINCOLOR,\n                        borderColor: COLORS.ADMINCOLOR,\n                    }),\n                    ...(ownerState.variant === \"contained\" && {\n                        height: SIZE.HEIGHT_ADMIN_BUTTON,\n                        backgroundColor:COLORS.ADMINCOLOR\n                    }),\n                }),\n            },\n        },\n    },\n});\n\n\nexport default GlobalTheme;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}