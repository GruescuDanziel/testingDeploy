{"ast":null,"code":"var _jsxFileName = \"/home/danziel/Charts/meeting-rooms-booking/src/components/TabletApp/RightSide/AdvancedBook/Participants.tsx\";\nimport React from \"react\";\nimport { Box, TextField, Autocomplete, Chip, Avatar, InputLabel, AvatarGroup } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Participants = _ref => {\n  let {\n    meetingParticipants,\n    allEmployees,\n    meetingOwner,\n    handleMeetingParticipants,\n    handleMeetingOwner,\n    fieldTextValid,\n    formValidationOwnerSetter\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Meeting owner*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"size-small-filled\",\n        size: \"small\",\n        options: allEmployees,\n        filterSelectedOptions: true,\n        onInputChange: (event, value) => {\n          const result = allEmployees.filter(person => person.name === value);\n          handleMeetingOwner(result);\n          value === \"\" ? formValidationOwnerSetter(false, \"isOwnerValid\") : formValidationOwnerSetter(true, \"isOwnerValid\");\n        },\n        getOptionDisabled: option => {\n          if (meetingParticipants.includes(option)) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        getOptionLabel: participant => participant.name,\n        renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          variant: \"outlined\",\n          label: option.name,\n          size: \"small\",\n          ...getTagProps({\n            index\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          variant: \"filled\",\n          hiddenLabel: true,\n          error: fieldTextValid.meetingOwnerValid.length === 0,\n          placeholder: \"An employee from doctari group\",\n          InputProps: {\n            ...params.InputProps,\n            disableUnderline: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      paddingTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Participants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        limitTags: 3,\n        id: \"size-small-filled-multi\",\n        filterSelectedOptions: true,\n        onChange: (event, value) => {\n          handleMeetingParticipants(value);\n        },\n        options: allEmployees,\n        getOptionDisabled: option => {\n          if (meetingOwner.length !== 0 && meetingOwner[0].name === option.name) {\n            return true;\n          }\n          return false;\n        },\n        getOptionLabel: participant => participant.name,\n        renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          variant: \"outlined\",\n          label: option.name,\n          size: \"small\",\n          ...getTagProps({\n            index\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          variant: \"filled\",\n          hiddenLabel: true,\n          placeholder: \"Provide participants names\",\n          size: \"small\",\n          InputProps: {\n            ...params.InputProps,\n            disableUnderline: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        minHeight: \"40px\",\n        padding: 1,\n        display: \"flex\",\n        gap: 0.5,\n        children: /*#__PURE__*/_jsxDEV(AvatarGroup, {\n          max: 6,\n          children: [meetingOwner.map(owner => {\n            return /*#__PURE__*/_jsxDEV(Avatar, {\n              src: owner.image,\n              children: owner.name.replace(/[^A-Z]/g, \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this);\n          }), meetingParticipants.map(participant => {\n            return /*#__PURE__*/_jsxDEV(Avatar, {\n              src: participant.image,\n              children: participant.name.replace(/[^A-Z]/g, \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Participants;\nexport default Participants;\nvar _c;\n$RefreshReg$(_c, \"Participants\");","map":{"version":3,"names":["React","Box","TextField","Autocomplete","Chip","Avatar","InputLabel","AvatarGroup","jsxDEV","_jsxDEV","Participants","_ref","meetingParticipants","allEmployees","meetingOwner","handleMeetingParticipants","handleMeetingOwner","fieldTextValid","formValidationOwnerSetter","children","fileName","_jsxFileName","lineNumber","columnNumber","id","size","options","filterSelectedOptions","onInputChange","event","value","result","filter","person","name","getOptionDisabled","option","includes","getOptionLabel","participant","renderTags","getTagProps","map","index","variant","label","renderInput","params","hiddenLabel","error","meetingOwnerValid","length","placeholder","InputProps","disableUnderline","paddingTop","multiple","limitTags","onChange","minHeight","padding","display","gap","max","owner","src","image","replace","_c","$RefreshReg$"],"sources":["/home/danziel/Charts/meeting-rooms-booking/src/components/TabletApp/RightSide/AdvancedBook/Participants.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport {\n    Box,\n    TextField,\n    Autocomplete,\n    Chip,\n    Avatar,\n    InputLabel,\n    AvatarGroup,\n} from \"@mui/material\";\n\nimport { ParticipantsProps } from \"../../../../interfaces/interfaces\";\n\nconst Participants: FC<ParticipantsProps> = ({\n    meetingParticipants,\n    allEmployees,\n    meetingOwner,\n    handleMeetingParticipants,\n    handleMeetingOwner,\n    fieldTextValid,\n    formValidationOwnerSetter,\n}) => {\n    return (\n        <Box>\n            <Box>\n                <InputLabel>Meeting owner*</InputLabel>\n                <Autocomplete\n                    id=\"size-small-filled\"\n                    size=\"small\"\n                    options={allEmployees}\n                    filterSelectedOptions\n                    onInputChange={(event, value) => {\n                        const result = allEmployees.filter(\n                            (person) => person.name === value\n                        );\n                        handleMeetingOwner(result);\n                        value === \"\"\n                            ? formValidationOwnerSetter(false, \"isOwnerValid\")\n                            : formValidationOwnerSetter(true, \"isOwnerValid\");\n                    }}\n                    getOptionDisabled={(option) => {\n                        if (meetingParticipants.includes(option)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }}\n                    getOptionLabel={(participant) => participant.name}\n                    renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                            <Chip\n                                variant=\"outlined\"\n                                label={option.name}\n                                size=\"small\"\n                                {...getTagProps({ index })}\n                            />\n                        ))\n                    }\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"filled\"\n                            hiddenLabel\n                            error={\n                                fieldTextValid.meetingOwnerValid.length === 0\n                            }\n                            placeholder=\"An employee from doctari group\"\n                            InputProps={{\n                                ...params.InputProps,\n                                disableUnderline: true,\n                            }}\n                        />\n                    )}\n                />\n            </Box>\n            <Box paddingTop={2}>\n                <InputLabel>Participants</InputLabel>\n                <Autocomplete\n                    multiple\n                    limitTags={3}\n                    id=\"size-small-filled-multi\"\n                    filterSelectedOptions\n                    onChange={(event, value) => {\n                        handleMeetingParticipants(value);\n                    }}\n                    options={allEmployees}\n                    getOptionDisabled={(option) => {\n                        if (\n                            meetingOwner.length !== 0 &&\n                            meetingOwner[0].name === option.name\n                        ) {\n                            return true;\n                        }\n                        return false;\n                    }}\n                    getOptionLabel={(participant) => participant.name}\n                    renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                            <Chip\n                                variant=\"outlined\"\n                                label={option.name}\n                                size=\"small\"\n                                {...getTagProps({ index })}\n                            />\n                        ))\n                    }\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"filled\"\n                            hiddenLabel\n                            placeholder=\"Provide participants names\"\n                            size=\"small\"\n                            InputProps={{\n                                ...params.InputProps,\n                                disableUnderline: true,\n                            }}\n                        />\n                    )}\n                />\n                <Box minHeight={\"40px\"} padding={1} display=\"flex\" gap={0.5}>\n                    <AvatarGroup max={6}>\n                        {meetingOwner.map((owner) => {\n                            return (\n                                <Avatar src={owner.image}>\n                                    {owner.name.replace(/[^A-Z]/g, \"\")}\n                                </Avatar>\n                            );\n                        })}\n                        {meetingParticipants.map((participant) => {\n                            return (\n                                <Avatar src={participant.image}>\n                                    {participant.name.replace(/[^A-Z]/g, \"\")}\n                                </Avatar>\n                            );\n                        })}\n                    </AvatarGroup>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Participants;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SACIC,GAAG,EACHC,SAAS,EACTC,YAAY,EACZC,IAAI,EACJC,MAAM,EACNC,UAAU,EACVC,WAAW,QACR,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvB,MAAMC,YAAmC,GAAGC,IAAA,IAQtC;EAAA,IARuC;IACzCC,mBAAmB;IACnBC,YAAY;IACZC,YAAY;IACZC,yBAAyB;IACzBC,kBAAkB;IAClBC,cAAc;IACdC;EACJ,CAAC,GAAAP,IAAA;EACG,oBACIF,OAAA,CAACR,GAAG;IAAAkB,QAAA,gBACAV,OAAA,CAACR,GAAG;MAAAkB,QAAA,gBACAV,OAAA,CAACH,UAAU;QAAAa,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACvCd,OAAA,CAACN,YAAY;QACTqB,EAAE,EAAC,mBAAmB;QACtBC,IAAI,EAAC,OAAO;QACZC,OAAO,EAAEb,YAAa;QACtBc,qBAAqB;QACrBC,aAAa,EAAEA,CAACC,KAAK,EAAEC,KAAK,KAAK;UAC7B,MAAMC,MAAM,GAAGlB,YAAY,CAACmB,MAAM,CAC7BC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAKJ,KAAK,CACpC;UACDd,kBAAkB,CAACe,MAAM,CAAC;UAC1BD,KAAK,KAAK,EAAE,GACNZ,yBAAyB,CAAC,KAAK,EAAE,cAAc,CAAC,GAChDA,yBAAyB,CAAC,IAAI,EAAE,cAAc,CAAC;QACzD,CAAE;QACFiB,iBAAiB,EAAGC,MAAM,IAAK;UAC3B,IAAIxB,mBAAmB,CAACyB,QAAQ,CAACD,MAAM,CAAC,EAAE;YACtC,OAAO,IAAI;UACf,CAAC,MAAM;YACH,OAAO,KAAK;UAChB;QACJ,CAAE;QACFE,cAAc,EAAGC,WAAW,IAAKA,WAAW,CAACL,IAAK;QAClDM,UAAU,EAAEA,CAACV,KAAK,EAAEW,WAAW,KAC3BX,KAAK,CAACY,GAAG,CAAC,CAACN,MAAM,EAAEO,KAAK,kBACpBlC,OAAA,CAACL,IAAI;UACDwC,OAAO,EAAC,UAAU;UAClBC,KAAK,EAAET,MAAM,CAACF,IAAK;UACnBT,IAAI,EAAC,OAAO;UAAA,GACRgB,WAAW,CAAC;YAAEE;UAAM,CAAC;QAAC;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEjC,CACJ;QACDuB,WAAW,EAAGC,MAAM,iBAChBtC,OAAA,CAACP,SAAS;UAAA,GACF6C,MAAM;UACVH,OAAO,EAAC,QAAQ;UAChBI,WAAW;UACXC,KAAK,EACDhC,cAAc,CAACiC,iBAAiB,CAACC,MAAM,KAAK,CAC/C;UACDC,WAAW,EAAC,gCAAgC;UAC5CC,UAAU,EAAE;YACR,GAAGN,MAAM,CAACM,UAAU;YACpBC,gBAAgB,EAAE;UACtB;QAAE;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAER;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eACNd,OAAA,CAACR,GAAG;MAACsD,UAAU,EAAE,CAAE;MAAApC,QAAA,gBACfV,OAAA,CAACH,UAAU;QAAAa,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACrCd,OAAA,CAACN,YAAY;QACTqD,QAAQ;QACRC,SAAS,EAAE,CAAE;QACbjC,EAAE,EAAC,yBAAyB;QAC5BG,qBAAqB;QACrB+B,QAAQ,EAAEA,CAAC7B,KAAK,EAAEC,KAAK,KAAK;UACxBf,yBAAyB,CAACe,KAAK,CAAC;QACpC,CAAE;QACFJ,OAAO,EAAEb,YAAa;QACtBsB,iBAAiB,EAAGC,MAAM,IAAK;UAC3B,IACItB,YAAY,CAACqC,MAAM,KAAK,CAAC,IACzBrC,YAAY,CAAC,CAAC,CAAC,CAACoB,IAAI,KAAKE,MAAM,CAACF,IAAI,EACtC;YACE,OAAO,IAAI;UACf;UACA,OAAO,KAAK;QAChB,CAAE;QACFI,cAAc,EAAGC,WAAW,IAAKA,WAAW,CAACL,IAAK;QAClDM,UAAU,EAAEA,CAACV,KAAK,EAAEW,WAAW,KAC3BX,KAAK,CAACY,GAAG,CAAC,CAACN,MAAM,EAAEO,KAAK,kBACpBlC,OAAA,CAACL,IAAI;UACDwC,OAAO,EAAC,UAAU;UAClBC,KAAK,EAAET,MAAM,CAACF,IAAK;UACnBT,IAAI,EAAC,OAAO;UAAA,GACRgB,WAAW,CAAC;YAAEE;UAAM,CAAC;QAAC;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEjC,CACJ;QACDuB,WAAW,EAAGC,MAAM,iBAChBtC,OAAA,CAACP,SAAS;UAAA,GACF6C,MAAM;UACVH,OAAO,EAAC,QAAQ;UAChBI,WAAW;UACXI,WAAW,EAAC,4BAA4B;UACxC3B,IAAI,EAAC,OAAO;UACZ4B,UAAU,EAAE;YACR,GAAGN,MAAM,CAACM,UAAU;YACpBC,gBAAgB,EAAE;UACtB;QAAE;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAER;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eACFd,OAAA,CAACR,GAAG;QAAC0D,SAAS,EAAE,MAAO;QAACC,OAAO,EAAE,CAAE;QAACC,OAAO,EAAC,MAAM;QAACC,GAAG,EAAE,GAAI;QAAA3C,QAAA,eACxDV,OAAA,CAACF,WAAW;UAACwD,GAAG,EAAE,CAAE;UAAA5C,QAAA,GACfL,YAAY,CAAC4B,GAAG,CAAEsB,KAAK,IAAK;YACzB,oBACIvD,OAAA,CAACJ,MAAM;cAAC4D,GAAG,EAAED,KAAK,CAACE,KAAM;cAAA/C,QAAA,EACpB6C,KAAK,CAAC9B,IAAI,CAACiC,OAAO,CAAC,SAAS,EAAE,EAAE;YAAC;cAAA/C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAC7B;UAEjB,CAAC,CAAC,EACDX,mBAAmB,CAAC8B,GAAG,CAAEH,WAAW,IAAK;YACtC,oBACI9B,OAAA,CAACJ,MAAM;cAAC4D,GAAG,EAAE1B,WAAW,CAAC2B,KAAM;cAAA/C,QAAA,EAC1BoB,WAAW,CAACL,IAAI,CAACiC,OAAO,CAAC,SAAS,EAAE,EAAE;YAAC;cAAA/C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACnC;UAEjB,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAC6C,EAAA,GAhII1D,YAAmC;AAkIzC,eAAeA,YAAY;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}