{"ast":null,"code":"var _jsxFileName = \"/home/danziel/Charts/meeting-rooms-booking/src/components/TabletApp/TabletApp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, Route, Routes, useParams } from \"react-router-dom\";\nimport { Box, Grid } from \"@mui/material\";\nimport LeftSide from \"./LeftSide/LeftSide\";\nimport AdvancedBook from \"./RightSide/AdvancedBook/AdvancedBook\";\nimport MeetingInfo from \"./RightSide/MeetingInfo/MeetingInfo\";\nimport Menu from \"./RightSide/Menu/Menu\";\nimport CONSTANTS from \"../../constants/Constants\";\nimport { getMeetings, getMeetingsData } from \"../../api/meetings\";\nimport COLORS from \"../../constants/CustomColors\";\nimport getRoomStatus from \"../../functions/GetRoomStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabletApp = () => {\n  _s();\n  const colorStates = [COLORS.GREEN, COLORS.YELLOW, COLORS.RED];\n  const [meetingsData, setMeetingsData] = useState();\n  const [roomName, setRoomName] = useState(\"Focus Room\");\n  const {\n    id\n  } = useParams();\n  const [selectedCardId, setSelectedCardId] = useState();\n  const [availability, setAvailability] = useState(CONSTANTS.ROOM_AVAILABLE);\n  const [time, setTime] = useState(0);\n  const [quickBookDone, setQuickBookDone] = useState(false);\n  const [isDurationOpen, setIsDurationOpen] = useState(false);\n  const onClickQuickBookGlobal = () => {\n    setIsDurationOpen(true);\n  };\n  const handleSetSelectedCardId = cardId => {\n    setSelectedCardId(cardId);\n  };\n  const handleQuickBookDone = () => {\n    setQuickBookDone(true);\n  };\n  const meetData = async () => {\n    const response = await getMeetingsData();\n    if (response.status === 200) {\n      setMeetingsData(response.data);\n    }\n  };\n  useEffect(() => {\n    meetData();\n  }, []);\n  useEffect(() => {\n    const setRoomStatus = async () => {\n      const allMeetings = await getMeetings();\n      const roomStatus = await getRoomStatus(allMeetings);\n      setAvailability(roomStatus);\n    };\n    setRoomStatus();\n    const interval = setInterval(() => {\n      setTime(Date.now());\n    }, CONSTANTS.INTERVAL_BACKGROUND_RESET);\n    return () => clearInterval(interval);\n  }, [time, quickBookDone]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    sx: {\n      backgroundColor: colorStates[availability],\n      transition: \"background-color 1s ease\"\n    },\n    flexDirection: \"row\",\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      children: meetingsData && /*#__PURE__*/_jsxDEV(LeftSide, {\n        meetings: meetingsData === null || meetingsData === void 0 ? void 0 : meetingsData.meetings,\n        name: meetingsData === null || meetingsData === void 0 ? void 0 : meetingsData.name,\n        availability: availability,\n        selectedCardId: selectedCardId,\n        onClickQuickBookGlobal: onClickQuickBookGlobal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 7,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          paddingTop: 10,\n          height: \"100vh\",\n          boxSizing: \"border-box\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          overflow: \"auto\",\n          sx: {\n            paddingTop: -20,\n            paddingLeft: 4,\n            background: \"white\",\n            height: \"100%\",\n            borderRadius: \"36px 0px 0px 0px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            boxSizing: \"border-box\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/:menu\",\n              element: /*#__PURE__*/_jsxDEV(Menu, {\n                roomId: id ? id : \"\",\n                roomName: roomName,\n                roomStatus: availability,\n                handleQuickBookDone: handleQuickBookDone,\n                isDurationOpen: isDurationOpen,\n                availability: availability\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/form\",\n              element: /*#__PURE__*/_jsxDEV(AdvancedBook, {\n                availability: availability\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/meetinginfo/:meetid\",\n              element: /*#__PURE__*/_jsxDEV(MeetingInfo, {\n                setSelectedCardId: handleSetSelectedCardId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              element: /*#__PURE__*/_jsxDEV(Navigate, {\n                to: \"/selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(TabletApp, \"5rFLv00xlaGOJiatiT9uNt2TChs=\", false, function () {\n  return [useParams];\n});\n_c = TabletApp;\nexport default TabletApp;\nvar _c;\n$RefreshReg$(_c, \"TabletApp\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","Route","Routes","useParams","Box","Grid","LeftSide","AdvancedBook","MeetingInfo","Menu","CONSTANTS","getMeetings","getMeetingsData","COLORS","getRoomStatus","jsxDEV","_jsxDEV","TabletApp","_s","colorStates","GREEN","YELLOW","RED","meetingsData","setMeetingsData","roomName","setRoomName","id","selectedCardId","setSelectedCardId","availability","setAvailability","ROOM_AVAILABLE","time","setTime","quickBookDone","setQuickBookDone","isDurationOpen","setIsDurationOpen","onClickQuickBookGlobal","handleSetSelectedCardId","cardId","handleQuickBookDone","meetData","response","status","data","setRoomStatus","allMeetings","roomStatus","interval","setInterval","Date","now","INTERVAL_BACKGROUND_RESET","clearInterval","sx","backgroundColor","transition","flexDirection","container","children","item","xs","meetings","name","fileName","_jsxFileName","lineNumber","columnNumber","paddingTop","height","boxSizing","overflow","paddingLeft","background","borderRadius","display","alignItems","justifyContent","path","element","roomId","to","_c","$RefreshReg$"],"sources":["/home/danziel/Charts/meeting-rooms-booking/src/components/TabletApp/TabletApp.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Navigate, Route, Routes, useParams } from \"react-router-dom\";\nimport { Box, Grid } from \"@mui/material\";\n\nimport LeftSide from \"./LeftSide/LeftSide\";\nimport AdvancedBook from \"./RightSide/AdvancedBook/AdvancedBook\";\nimport MeetingInfo from \"./RightSide/MeetingInfo/MeetingInfo\";\nimport Menu from \"./RightSide/Menu/Menu\";\nimport CONSTANTS from \"../../constants/Constants\";\nimport { getMeetings, getMeetingsData } from \"../../api/meetings\";\nimport COLORS from \"../../constants/CustomColors\";\nimport getRoomStatus from \"../../functions/GetRoomStatus\";\nimport { iLeftSide } from \"../../interfaces/interfaces\";\n\nconst TabletApp = () => {\n    const colorStates = [COLORS.GREEN, COLORS.YELLOW, COLORS.RED];\n    const [meetingsData, setMeetingsData] = useState<iLeftSide>();\n\n    const [roomName, setRoomName] = useState(\"Focus Room\");\n    const { id } = useParams();\n\n    const [selectedCardId, setSelectedCardId] = useState<string>();\n\n    const [availability, setAvailability] = useState<number>(\n        CONSTANTS.ROOM_AVAILABLE\n    );\n    const [time, setTime] = useState<number>(0);\n    const [quickBookDone, setQuickBookDone] = useState<boolean>(false);\n    const [isDurationOpen, setIsDurationOpen] = useState<boolean>(false);\n\n    const onClickQuickBookGlobal = () => {\n        setIsDurationOpen(true);\n    };\n\n    const handleSetSelectedCardId = (cardId: string) => {\n        setSelectedCardId(cardId);\n    };\n\n    const handleQuickBookDone = () => {\n        setQuickBookDone(true);\n    };\n\n    const meetData = async () => {\n        const response = await getMeetingsData();\n        if (response.status === 200) {\n            setMeetingsData(response.data);\n        }\n    };\n    useEffect(() => {\n        meetData();\n    }, []);\n\n    useEffect(() => {\n        const setRoomStatus = async () => {\n            const allMeetings = await getMeetings();\n            const roomStatus = await getRoomStatus(allMeetings);\n            setAvailability(roomStatus);\n        };\n        setRoomStatus();\n\n        const interval = setInterval(() => {\n            setTime(Date.now());\n        }, CONSTANTS.INTERVAL_BACKGROUND_RESET);\n\n        return () => clearInterval(interval);\n    }, [time, quickBookDone]);\n\n    return (\n        <Grid\n            sx={{\n                backgroundColor: colorStates[availability],\n                transition: \"background-color 1s ease\",\n            }}\n            flexDirection=\"row\"\n            container\n        >\n            <Grid item xs={5}\n            >\n                {meetingsData && (\n                    <LeftSide\n                        meetings={meetingsData?.meetings}\n                        name={meetingsData?.name}\n                        availability={availability}\n                        selectedCardId={selectedCardId as string}\n                        onClickQuickBookGlobal={onClickQuickBookGlobal}\n                    />\n                )}\n            </Grid>\n            <Grid item xs={7}>\n                <Box\n                    sx={{\n                        paddingTop: 10,\n                        height: \"100vh\",\n                        boxSizing: \"border-box\",\n                    }}\n                >\n                    <Box\n                        overflow={\"auto\"}\n                        sx={{\n                            paddingTop: -20,\n                            paddingLeft: 4,\n                            background: \"white\",\n                            height: \"100%\",\n                            borderRadius: \"36px 0px 0px 0px\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            justifyContent: \"flex-start\",\n                            boxSizing: \"border-box\",\n                        }}\n                    >\n                        <Routes>\n                            <Route\n                                path=\"/:menu\"\n                                element={\n                                    <Menu\n                                        roomId={id ? id : \"\"}\n                                        roomName={roomName}\n                                        roomStatus={availability}\n                                        handleQuickBookDone={\n                                            handleQuickBookDone\n                                        }\n                                        isDurationOpen={isDurationOpen}\n                                        availability={availability}\n                                    />\n                                }\n                            />\n                            <Route\n                                path=\"/form\"\n                                element={\n                                    <AdvancedBook availability={availability} />\n                                }\n                            />\n                            <Route\n                                path=\"/meetinginfo/:meetid\"\n                                element={\n                                    <MeetingInfo\n                                        setSelectedCardId={\n                                            handleSetSelectedCardId\n                                        }\n                                    />\n                                }\n                            />\n                            <Route\n                                path=\"*\"\n                                element={<Navigate to=\"/selection\" />}\n                            />\n                        </Routes>\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default TabletApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}